class Solution {
    public boolean exist(char[][] b, String w) {
        int m = b.length, n = b[0].length;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (b[i][j] == w.charAt(0) && dfs(b, i, j, w, 0)) {
                    return true;
                }
            }
        }
        return false;
    }

    private boolean dfs(char[][] b, int r, int c, String w, int idx) {
        if (idx == w.length()) return true;
        if (r < 0 || c < 0 || r >= b.length || c >= b[0].length || b[r][c] != w.charAt(idx))
            return false;

        char temp = b[r][c];
        b[r][c] = '#';

        boolean found = dfs(b, r + 1, c, w, idx + 1) ||
                        dfs(b, r - 1, c, w, idx + 1) ||
                        dfs(b, r, c + 1, w, idx + 1) ||
                        dfs(b, r, c - 1, w, idx + 1);

        b[r][c] = temp;
        return found;
    }
}
